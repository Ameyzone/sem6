!pip install nltk

import nltk
from nltk.tokenize import word_tokenize
from nltk.corpus import stopwords
from nltk.stem import PorterStemmer, WordNetLemmatizer
from nltk import pos_tag
from sklearn.feature_extraction.text import TfidfVectorizer

nltk.download('punkt')
nltk.download('stopwords')
nltk.download('averaged_perceptron_tagger')
nltk.download('wordnet')

document = "Text analytics is the process of deriving insights from textual data. It involves various techniques like tokenization, POS tagging, stop word removal, stemming, and lemmatization."

tokens = word_tokenize(document)
pos_tags = pos_tag(tokens)

stop_words = set(stopwords.words('english'))
filtered_tokens = [token for token in tokens if token.lower() not in stop_words]


stemmer = PorterStemmer()
stemmed_tokens = [stemmer.stem(token) for token in filtered_tokens]

lemmatizer = WordNetLemmatizer()
lemmatized_tokens = [lemmatizer.lemmatize(token) for token in filtered_tokens]

print("Tokenization:", tokens)
print("POS Tagging:", pos_tags)
print("Stop word removal:", filtered_tokens)
print("Stemming:", stemmed_tokens)
print("Lemmatization:", lemmatized_tokens)

print("Tokenization:", tokens)
print("POS Tagging:", pos_tags)
print("Stop word removal:", filtered_tokens)
print("Stemming:", stemmed_tokens)
print("Lemmatization:", lemmatized_tokens)

vectorizer = TfidfVectorizer()
tfidf_matrix = vectorizer.fit_transform(documents)

print(tfidf_matrix)